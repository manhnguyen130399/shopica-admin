{"version":3,"sources":["./src/app/modules/brand/brand.routing.ts","./src/app/modules/brand/page/brand-modal/brand-modal.component.ts","./src/app/modules/brand/page/brand-modal/brand-modal.component.html","./src/app/modules/brand/page/brand-list/brand-list.component.ts","./src/app/modules/brand/page/brand-list/brand-list.component.html","./src/app/modules/brand/brand.module.ts"],"names":[],"mappings":"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","file":"brand-brand-module.js","sourcesContent":["import { BrandListComponent } from './page/brand-list/brand-list.component';\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const brandRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrandListComponent\r\n  }\r\n];\r\n","import { BaseModalComponent } from '@app/modules/common/base-modal-component';\r\nimport { Category } from '@modules/category/models/category';\r\nimport { BrandService } from '@modules/brand/services/brand.service';\r\nimport { Brand } from '@modules/brand/models/brand';\r\nimport { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-brand-modal',\r\n  templateUrl: './brand-modal.component.html',\r\n  styleUrls: ['./brand-modal.component.css']\r\n})\r\nexport class BrandModalComponent extends BaseModalComponent<Brand> implements OnInit {\r\n\r\n  @Input() isVisible = false;\r\n  @Input() modalTitle = \"ADD BRAND\";\r\n  @Input() brandObject: Brand;\r\n  @Output() cancelModalEvent = new EventEmitter<string>();\r\n  @Output() okModalEvent = new EventEmitter<Brand>();\r\n  brands: string[] = [];\r\n  isLoadingBrandInSelect = false;\r\n  constructor(\r\n    private readonly formBuilder: FormBuilder,\r\n    private readonly brandService: BrandService,\r\n    private readonly messageService: NzMessageService\r\n  ) {\r\n    super(brandService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.getBrandAllStore();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.sizeObject != undefined && changes.sizeObject.currentValue != undefined) {\r\n      this.baseForm.controls.sizeName.setValue(changes.sizeObject.currentValue.sizeName);\r\n      this.modalTitle = \"Edit brand\";\r\n    }\r\n  }\r\n\r\n  addItem(input: HTMLInputElement): void {\r\n    if (this.brands.indexOf(input.value) === -1 && input.value) {\r\n      this.brands = [...this.brands, input.value];\r\n      input.value = null;\r\n    }\r\n  }\r\n\r\n  getBrandAllStore() {\r\n    this.isLoadingBrandInSelect = true;\r\n    this.brandService.getBrandAllStore().pipe(\r\n      finalize(() => this.isLoadingBrandInSelect = false)\r\n    ).subscribe(res => {\r\n      if (res.code === 'OK') {\r\n        this.brands = res.data.map(x => x.brandName).sort((a, b) => a.localeCompare(b));\r\n      }\r\n    })\r\n  }\r\n\r\n  buildForm() {\r\n    this.baseForm = this.formBuilder.group({\r\n      brandName: [null, [Validators.required]]\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    super.create(this.baseForm.value, this.okModalEvent, this.messageService);\r\n    this.getBrandAllStore();\r\n  }\r\n\r\n  handleCancel(): void {\r\n    super.cancel(this.cancelModalEvent)\r\n  }\r\n}\r\n","<nz-modal [(nzVisible)]=\"isVisible\" nzOkText=\"OK\" nzClassName=\"form-modal\" [nzTitle]=\"modalTitle\" [nzClosable]=\"false\"\r\n  [nzOkDisabled]=\"baseForm.invalid\" [nzOkLoading]=\"isLoadingButton\" (nzOnCancel)=\"handleCancel()\"\r\n  (nzOnOk)=\"submitForm()\">\r\n  <ng-container *nzModalContent>\r\n    <form nz-form [formGroup]=\"baseForm\">\r\n      <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"6\" nzFor=\"sizeName\">Select Brand</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"Please input your brand name!\">\r\n          <nz-select [nzDropdownRender]=\"renderTemplate\" [nzLoading]=\"isLoadingBrandInSelect\"\r\n            formControlName=\"brandName\" nzShowSearch nzAllowClear nzPlaceHolder=\"Select a Brand\">\r\n            <nz-option *ngFor=\"let item of brands\" [nzLabel]=\"item\" [nzValue]=\"item\">\r\n            </nz-option>\r\n          </nz-select>\r\n          <ng-template #renderTemplate>\r\n            <nz-divider></nz-divider>\r\n            <div class=\"input-container\">\r\n              <input type=\"text\" nz-input #inputElement />\r\n              <a class=\"add-item\" (click)=\"addItem(inputElement)\"><i nz-icon nzType=\"plus\"></i> Add item</a>\r\n            </div>\r\n          </ng-template>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </form>\r\n  </ng-container>\r\n</nz-modal>\r\n","import { BrandService } from '@modules/brand/services/brand.service';\r\nimport { Brand } from '@modules/brand/models/brand';\r\nimport { BaseListComponent } from '@app/modules/common/base-list-component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NzTableQueryParams } from 'ng-zorro-antd/table';\r\nimport { UtilitiesService } from '@app/core/services/utilities/utilities.service';\r\n\r\n@Component({\r\n  selector: 'app-brand-list',\r\n  templateUrl: './brand-list.component.html',\r\n  styleUrls: ['./brand-list.component.css']\r\n})\r\nexport class BrandListComponent extends BaseListComponent<Brand> implements OnInit {\r\n\r\n  constructor(\r\n    private readonly brandService: BrandService, private readonly utilitiesService: UtilitiesService) {\r\n    super(brandService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isAdmin = this.utilitiesService.getRole() === 'Admin';\r\n  }\r\n\r\n  searchByName() {\r\n    this.baseParams.filters = [{ key: \"brandName\", value: this.searchValue }];\r\n    super.search();\r\n  }\r\n\r\n  onQueryParamsChange = (params: NzTableQueryParams) => {\r\n    this.baseParams.filters = [{ key: \"brandName\", value: this.searchValue }];\r\n    super.onQueryParamsChangeFromParent(params);\r\n  }\r\n}\r\n","<div *ngIf=\"!isAdmin\" class=\"table-operations\">\r\n  <app-brand-modal [brandObject]=\"selectedData\" [isVisible]=\"isShowModal\" (cancelModalEvent)=\"closeModal($event)\"\r\n    (okModalEvent)=\"closeModal($event)\">\r\n  </app-brand-modal>\r\n  <button (click)=\"showModal()\" class=\"add-btn\" nzType=\"primary\" nz-button>\r\n    <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\r\n  </button>\r\n</div>\r\n<nz-table #sortTable [nzFrontPagination]=\"false\" [nzTotal]=\"total\" [nzPageSize]=\"baseParams.pageSize\"\r\n  [nzPageIndex]=\"baseParams.pageIndex\" nzBordered [nzLoading]=\"isLoading\" (nzQueryParams)=\"onQueryParamsChange($event)\"\r\n  [nzData]=\"listData\" nzTableLayout=\"fixed\">\r\n  <thead>\r\n    <tr>\r\n      <th nzAlign=\"center\" nzColumnKey=\"id\" [nzSortFn]=\"true\">Id</th>\r\n      <th nzAlign=\"center\">Brand Name\r\n        <nz-filter-trigger [(nzVisible)]=\"isShowSearchInput\" [nzActive]=\"searchValue.length > 0\"\r\n          [nzDropdownMenu]=\"menu\">\r\n          <i nz-icon nzType=\"search\"></i>\r\n        </nz-filter-trigger>\r\n      </th>\r\n      <th nzAlign=\"center\">Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let data of sortTable.data; let odd=odd; let even = even; let index  = index ;\"\r\n      [ngClass]=\"{ odd: odd, even: even }\">\r\n      <td nzAlign=\"center\">{{ index + 1 + ((baseParams.pageIndex - 1) * baseParams.pageSize) }}</td>\r\n      <td nzAlign=\"center\">{{ data.brandName }}</td>\r\n      <td nzAlign=\"center\" class=\"btn-action\">\r\n        <button nz-button nzType=\"primary\" nzPopconfirmOverlayClassName=\"delete-confirm-card\" nz-popconfirm\r\n          nzPopconfirmTitle=\"Are you sure delete this brand?\" (nzOnConfirm)=\"delete(data.id)\"\r\n          nzPopconfirmPlacement=\"left\" nzDanger>Delete<i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i></button>\r\n        <!-- <button nz-button (click)=\"edit(data)\" [disabled]=\"true\" nzType=\"primary\">Edit<i nz-icon nzType=\"edit\"\r\n            nzTheme=\"outline\"></i></button> -->\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</nz-table>\r\n<nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n  <div class=\"ant-table-filter-dropdown\">\r\n    <div class=\"search-box\">\r\n      <input type=\"text\" nz-input placeholder=\"Search name\" [(ngModel)]=\"searchValue\" />\r\n      <button nz-button nzSize=\"small\" nzType=\"primary\" (click)=\"searchByName()\" class=\"search-button\">\r\n        Search\r\n      </button>\r\n      <!-- <button nz-button nzSize=\"small\" (click)=\"reset()\">Reset</button> -->\r\n    </div>\r\n  </div>\r\n</nz-dropdown-menu>\r\n","import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrandListComponent } from './page/brand-list/brand-list.component';\r\nimport { BrandModalComponent } from './page/brand-modal/brand-modal.component';\r\nimport { brandRoutes } from './brand.routing';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [BrandListComponent, BrandModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule.forChild(brandRoutes)\r\n  ]\r\n})\r\nexport class BrandModule { }\r\n"],"sourceRoot":"webpack:///"}