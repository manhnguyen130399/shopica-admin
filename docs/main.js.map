{"version":3,"sources":["./src/app/core/jwt/jwt-options-factory.ts","./src/environments/environment.ts","./src/app/core/services/signalr/signalr.service.ts","./src/app/core/services/utilities/utilities.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/layout/auth-layout/auth-layout.component.ts","./src/app/layout/auth-layout/auth-layout.component.html","./src/app/core/core.module.ts","./src/app/core/services/storage/storage.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { UtilitiesService } from './../services/utilities/utilities.service';\r\nimport { environment } from '@env';\r\nexport function jwtOptionsFactory(utilitiesService: UtilitiesService) {\r\n  return {\r\n    tokenGetter: () => {\r\n      return utilitiesService.getToken();\r\n\r\n    },\r\n    authScheme: \"Bearer \",\r\n    allowedDomains: environment.backendDomain,\r\n    disallowedRoutes: [], // not token in header\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  userServiceUrl: \"https://aspnetclusters-37619-0.cloudclusters.net\",\r\n  orderServiceUrl: \"https://aspnetclusters-37670-0.cloudclusters.net\",\r\n  productServiceUrl: \"https://backend-java-api.herokuapp.com\",\r\n  messageServiceUrl: 'https://aspnetclusters-37333-0.cloudclusters.net',\r\n  localUserServiceUrl: \"https://localhost:5001\",\r\n  localOrderServiceUrl: \"https://localhost:5002\",\r\n  localMessageServiceUrl: 'https://localhost:5003',\r\n  ghnAPIUrl: \"https://dev-online-gateway.ghn.vn/shiip/public-api\",\r\n  tokenKey: \"token\",\r\n  verifyKey: \"verifyKey\",\r\n  ghnToken: \"aa3d5553-73e6-11eb-8be2-c21e19fc6803\",\r\n  backendDomain: [\r\n    \"aspnetclusters-37619-0.cloudclusters.net\",\r\n    \"aspnetclusters-37670-0.cloudclusters.net\",\r\n    \"backend-java-api.herokuapp.com\",\r\n    \"aspnetclusters-37333-0.cloudclusters.net\",\r\n    \"localhost:5001\",\r\n    \"localhost:5002\",\r\n    \"localhost:5003\"\r\n  ]\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Conversation } from '@core/models/message/conversation';\r\nimport { UtilitiesService } from './../utilities/utilities.service';\r\nimport { Notify } from './../../../models/notifies/notify';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { Subject } from 'rxjs';\r\nimport { Message } from '@app/core/models/message/message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignalrService {\r\n  private notifyHubConnection: signalR.HubConnection\r\n  private chatHubConnection: signalR.HubConnection\r\n\r\n  private notifySubject = new Subject<Notify>();\r\n\r\n  private messageSubject = new Subject<Conversation>();\r\n\r\n  notifyEventEmitter$ = this.notifySubject.asObservable();\r\n  messageEventEmitter$ = this.messageSubject.asObservable();\r\n\r\n  constructor(private readonly utilitiesService: UtilitiesService) { }\r\n\r\n  public buildNotifyConnection() {\r\n    this.notifyHubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`${environment.orderServiceUrl}/orderNotifys`, { accessTokenFactory: () => this.utilitiesService.getToken() })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n  }\r\n\r\n\r\n  public buildChatConnection() {\r\n    this.chatHubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`${environment.messageServiceUrl}/chatHub`, { accessTokenFactory: () => this.utilitiesService.getToken() })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n  }\r\n\r\n  public startNotifyConnection() {\r\n    this.notifyHubConnection\r\n      .start()\r\n      .then(() => console.log(\"Start Notify Connection\"))\r\n      .catch((err) => console.log('Error while starting connection: ' + err));\r\n  }\r\n\r\n  public startChatConnection() {\r\n    this.chatHubConnection\r\n      .start()\r\n      .then(() => console.log(\"Start Chat Connection\"))\r\n      .catch((err) => console.log('Error while starting connection: ' + err));\r\n  }\r\n\r\n  public addNotifyDataListener = () => {\r\n    this.notifyHubConnection.on('NewOrderNotify', (data) => {\r\n      this.notifySubject.next(data);\r\n    });\r\n  }\r\n\r\n  public addReceiveMessageDataListener = () => {\r\n    this.chatHubConnection.on('NewMessage', (data) => {\r\n      this.messageSubject.next(data);\r\n    });\r\n  }\r\n}\r\n","import { StorageService } from './../storage/storage.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env';\r\nimport { TokenData } from '@app/models/token-data';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilitiesService {\r\n  user: TokenData;\r\n  constructor(private readonly storageService: StorageService) { }\r\n\r\n  getToken(): string {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null) {\r\n      return this.user.token;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getRole(): string {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null) {\r\n      return this.user.role;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  isTokeExpire(): boolean {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null && this.user.exp * 1000 > Date.now()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getStoreId(): number {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null) {\r\n      return this.user.storeId;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getName(): string {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null) {\r\n      return this.user.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getUserName(): string {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null) {\r\n      return this.user.sub;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getImage(): string {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null) {\r\n      return this.user.image;\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  getAccountId(): number {\r\n    this.user = this.storageService.getValue<TokenData>(environment.tokenKey);\r\n    if (this.user != null) {\r\n      return this.user.accountId;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { SignalrService } from './core/services/signalr/signalr.service';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(private readonly signalrService: SignalrService) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.signalrService.buildChatConnection();\r\n    this.signalrService.buildNotifyConnection();\r\n    this.signalrService.startNotifyConnection();\r\n    this.signalrService.startChatConnection();\r\n    this.signalrService.addNotifyDataListener();\r\n    this.signalrService.addReceiveMessageDataListener();\r\n\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CoreModule } from '@core/core.module';\r\n\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AuthLayoutComponent } from '@layout/auth-layout/auth-layout.component';\r\n\r\nimport { routes } from '@app/app.routing';\r\nimport { NZ_DATE_LOCALE, NZ_I18N } from 'ng-zorro-antd/i18n';\r\nimport { en_US } from 'ng-zorro-antd/i18n';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\nimport { JwtModule, JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { jwtOptionsFactory } from './core/jwt/jwt-options-factory';\r\nimport { NzConfig, NZ_CONFIG } from 'ng-zorro-antd/core/config';\r\nimport { UtilitiesService } from './core/services/utilities/utilities.service';\r\n\r\nconst ngZorroConfig: NzConfig = {\r\n  message: {\r\n    nzDuration: 3000\r\n  }\r\n};\r\n\r\nregisterLocaleData(en);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AuthLayoutComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    NzButtonModule,\r\n    NzLayoutModule,\r\n    RouterModule.forRoot(routes),\r\n    // jwt\r\n    JwtModule.forRoot({\r\n      jwtOptionsProvider: {\r\n        provide: JWT_OPTIONS,\r\n        useFactory: jwtOptionsFactory,\r\n        deps: [UtilitiesService]\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_CONFIG, useValue: ngZorroConfig },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AuthGuard } from '@core/guards/auth.guard';\r\nimport { Routes } from '@angular/router';\r\nimport { AuthLayoutComponent } from '@layout/auth-layout/auth-layout.component';\r\nexport const routes: Routes = [\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () =>\r\n      import('./modules/main/main.module').then((m) => m.MainModule),\r\n  },\r\n  {\r\n    path: 'auth',\r\n    component: AuthLayoutComponent,\r\n    loadChildren: () =>\r\n      import('./modules/auth/auth.module').then((m) => m.AuthModule),\r\n  },\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: '/admin/dashboard',\r\n  },\r\n  { path: '**', redirectTo: '/auth/login', pathMatch: 'full' }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-layout',\r\n  templateUrl: './auth-layout.component.html',\r\n  styleUrls: ['./auth-layout.component.css']\r\n})\r\nexport class AuthLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StorageService {\r\n  storage: Storage;\r\n  constructor() {\r\n    this.storage = window.localStorage;\r\n  }\r\n\r\n  set(key: string, value: string): void {\r\n    this.storage[key] = value;\r\n  }\r\n\r\n  get(key: string): string {\r\n    return this.storage[key] || false;\r\n  }\r\n\r\n  setObject(key: string, value: any): void {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    this.storage[key] = JSON.stringify(value);\r\n  }\r\n\r\n  getObject(key: string): any {\r\n    return JSON.parse(this.storage[key] || '{}');\r\n  }\r\n\r\n  getValue<T>(key: string): T {\r\n    const obj = JSON.parse(this.storage[key] || null);\r\n    return <T>obj || null;\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.storage.removeItem(key);\r\n  }\r\n\r\n  clear() {\r\n    this.storage.clear();\r\n  }\r\n\r\n  get length(): number {\r\n    return this.storage.length;\r\n  }\r\n\r\n  get isStorageEmpty(): boolean {\r\n    return this.length == 0;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}